// [Lists, Console, Files, Characters, Strings, Actual, Namespace, Collector, EmptyHead, FlatMapHead, Head, HeadedQuery, MapHead, RangeHead, SingleHead, ZipHead, Joiner, List, ListCollector, Queries, Query, IOError, Path, None, Option, Some, Err, Ok, Result, Tuple2, Tuple2Impl, Type, CompileState, Definition, FunctionHeader, Parameter, FunctionSegment, ImmutableCompileState, Import, DivideState, Placeholder, Whitespace, ArrayType, BooleanType, FunctionType, PrimitiveType, SliceType, TemplateType, VariadicType, AccessNode, Argument, Caller, ConstructionCaller, ConstructorHeader, InvokableNode, LambdaNode, NotNode, OperationNode, StringNode, SymbolNode, Value, Location, Platform, Source, Main, Lists, Console, Files, Characters, Strings]
export interface StringsInstance {
	static def length(stripped: &[I8]): I32;
	static def sliceBetween(input: &[I8], startInclusive: I32, endExclusive: I32): &[I8];
	static def sliceFrom(input: &[I8], startInclusive: I32): &[I8];
	static def isEmpty(cache: &[I8]): Bool;
	static def equalsTo(left: &[I8], right: &[I8]): Bool;
	static def strip(input: &[I8]): &[I8];
	static def isBlank(value: &[I8]): Bool;
	static def charAt(input: &[I8], index: I32): I8;
}
