// [Lists, Lists, Lists, Console, Console, Console, Files, Files, Files, Characters, Characters, Characters, Strings, Strings, Strings, Actual, Actual, Actual, Namespace, Namespace, Namespace, Collector, Collector, Collector, EmptyHead, EmptyHead, EmptyHead, FlatMapHead, FlatMapHead, FlatMapHead, Head, Head, Head, HeadedQuery, HeadedQuery, HeadedQuery, MapHead, MapHead, MapHead, RangeHead, RangeHead, RangeHead, SingleHead, SingleHead, SingleHead, ZipHead, ZipHead, ZipHead, Joiner, Joiner, Joiner, List, List, List, ListCollector, ListCollector, ListCollector, Queries, Queries, Queries, Query, Query, Query, IOError, IOError, IOError, Path, Path, Path, None, None, None, Option, Option, Option, Some, Some, Some, Err, Err, Err, Ok, Ok, Ok, Result, Result, Result, Tuple2, Tuple2, Tuple2, Tuple2Impl, Tuple2Impl]
import magma.api.{ Tuple2 };
export struct Tuple2Impl<A, B> implements Tuple2<A, B> {
	mut leftValue: A;
	mut rightValue: B;
	constructor (mut leftValue: A, mut rightValue: B) {
		this.leftValue = leftValue;
		this.rightValue = rightValue;
	}
	def left(): A {
		return this/*auto*/.leftValue;
	}
	def right(): B {
		return this/*auto*/.rightValue;
	}
}
