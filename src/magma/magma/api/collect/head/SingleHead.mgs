import magma.api.collect.head.Head;
import magma.api.option.Option;
import magma.api.option.None;
import magma.api.option.Some;
export struct SingleHead<T> implements Head<T> {
	element: T;
	mut retrieved: Bool;
	constructor (element: T) {
		this/*auto*/.element = element/*auto*/;
		this/*auto*/.retrieved = false/*auto*/;
	}
	def next(): Option<T> {
		if (this/*auto*/.retrieved) {
			return None<T>(/*auto*/);
		}
		this/*auto*/.retrieved = true/*auto*/;
		return Some<T>(this/*auto*/.element);
	}
}
