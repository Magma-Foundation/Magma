// [Lists, Lists, Lists, Console, Console, Console, Files, Files, Files, Characters, Characters, Characters, Strings, Strings, Strings, Actual, Actual, Actual, Namespace, Namespace, Namespace, Collector, Collector, Collector, EmptyHead, EmptyHead, EmptyHead, FlatMapHead, FlatMapHead, FlatMapHead, Head, Head, Head, HeadedQuery, HeadedQuery, HeadedQuery, MapHead, MapHead, MapHead, RangeHead, RangeHead, RangeHead, SingleHead, SingleHead]
import magma.api.collect.head.{ Head };
import magma.api.option.{ Option, None, Some };
export struct SingleHead<T> implements Head<T> {
	element: T;
	mut retrieved: Bool;
	constructor (element: T) {
		this/*auto*/.element = element/*T*/;
		this/*auto*/.retrieved = false/*auto*/;
	}
	def next(): Option<T> {
		if (this/*auto*/.retrieved) {
			return None<T>(/*auto*/);
		}
		this/*auto*/.retrieved = true/*auto*/;
		return Some<T>(this/*auto*/.element);
	}
}
