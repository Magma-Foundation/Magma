// [Lists, Lists, Lists, Console, Console, Console, Files, Files, Files, Characters, Characters, Characters, Strings, Strings, Strings, Actual, Actual, Actual, Namespace, Namespace, Namespace, Collector, Collector, Collector, EmptyHead, EmptyHead, EmptyHead, FlatMapHead, FlatMapHead, FlatMapHead, Head, Head, Head, HeadedQuery, HeadedQuery, HeadedQuery, MapHead, MapHead]
import magma.api.collect.head.{ Head };
import magma.api.option.{ Option };
export struct MapHead<T, R> implements Head<R> {
	mut head: Head<T>;
	mut mapper: (arg0 : T) => R;
	constructor (mut head: Head<T>, mut mapper: (arg0 : T) => R) {
		this.head = head;
		this.mapper = mapper;
	}
	def next(): Option<R> {
		return this/*auto*/.head.next(/*auto*/).map(this/*auto*/.mapper);
	}
}
