/*[
	Actual, 
	Characters, 
	Collector, 
	Console, 
	EmptyHead, 
	Files, 
	FlatMapHead, 
	Head, 
	HeadedQuery, 
	Lists, 
	MapHead, 
	Namespace, 
	RangeHead, 
	Strings
]*/
import magma.api.collect.head.{ Head };
import magma.api.option.{ Option, None, Some };
export struct RangeHead implements Head<I32> {
	length: I32;
	mut counter: I32;
	constructor (length: I32) {
		this/*auto*/.length = length/*I32*/;
		this/*auto*/.counter = 0/*auto*/;
	}
	def next(): Option<I32> {
		if (this/*auto*/.counter >= this/*auto*/.length) {
			return None<I32>(/*auto*/);
		}
		let value = this/*auto*/.counter;
		this/*auto*/.counter++;
		return Some<I32>(value/*string*/);
	}
}
