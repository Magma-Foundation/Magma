// [Lists, Lists, Lists, Console, Console, Console, Files, Files, Files, Characters, Characters, Characters, Strings, Strings, Strings, Actual, Actual, Actual, Namespace, Namespace, Namespace, Collector, Collector, Collector, EmptyHead, EmptyHead, EmptyHead, FlatMapHead, FlatMapHead, FlatMapHead, Head, Head, Head, HeadedQuery, HeadedQuery, HeadedQuery, MapHead, MapHead, MapHead, RangeHead, RangeHead]
import magma.api.collect.head.{ Head };
import magma.api.option.{ Option, None, Some };
export struct RangeHead implements Head<I32> {
	length: I32;
	mut counter: I32;
	constructor (length: I32) {
		this/*auto*/.length = length/*I32*/;
		this/*auto*/.counter = 0/*auto*/;
	}
	def next(): Option<I32> {
		if (this/*auto*/.counter >= this/*auto*/.length) {
			return None<I32>(/*auto*/);
		}
		let value = this/*auto*/.counter;
		this/*auto*/.counter++;
		return Some<I32>(value/*auto*/);
	}
}
