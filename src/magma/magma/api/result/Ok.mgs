import magma.api.result.Result;
import magma.api.option.Option;
import magma.api.option.None;
import magma.api.option.Some;
export struct Ok<T, X> implements Result<T, X> {
	mut value: T;
	constructor (mut value: T) {
		this.value = value;
	}
	def findError(): Option<X> {
		return None<X>(/*auto*/);
	}
	def findValue(): Option<T> {
		return Some<T>(this/*auto*/.value);
	}
	def match<R>(whenOk: (arg0 : T) => R, whenErr: (arg0 : X) => R): R {
		return whenOk/*(arg0 : T) => R*/(this/*auto*/.value);
	}
}
