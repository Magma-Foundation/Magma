// []
import magma.api.result.{ Result };
import magma.api.option.{ Option, Some, None };
export struct Err<T, X> implements Result<T, X> {
	mut error: X;
	constructor (mut error: X) {
		this.error = error;
	}
	def findError(): Option<X> {
		return Some<X>(this/*auto*/.error);
	}
	def findValue(): Option<T> {
		return None<T>(/*auto*/);
	}
	def match<R>(whenOk: (arg0 : T) => R, whenErr: (arg0 : X) => R): R {
		return whenErr/*(arg0 : X) => R*/(this/*auto*/.error);
	}
}
