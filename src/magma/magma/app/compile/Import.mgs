import magma.api.collect.list.List;
import magma.app.io.Platform;
import magma.api.collect.Joiner;
export struct Import {
	mut namespace: List<&[I8]>;
	mut child: &[I8];
	constructor (mut namespace: List<&[I8]>, mut child: &[I8]) {
		this.namespace = namespace;
		this.child = child;
	}
	def generate(platform: Platform): &[I8] {
		if (Platform/*auto*/.Magma === platform/*Platform*/) {
			let joinedNamespace: &[I8] = this/*auto*/.namespace.query(/*auto*/).collect(Joiner(".")).orElse("");
			return "import " + joinedNamespace/*auto*/ + "." + this/*auto*/.child + ";\n";
		}
		let joinedNamespace: &[I8] = this/*auto*/.namespace.addLast(this/*auto*/.child).query(/*auto*/).collect(Joiner("/")).orElse("");
		return "import { " + this/*auto*/.child + " } from \"" + joinedNamespace/*auto*/ + "\";\n";
	}
}
