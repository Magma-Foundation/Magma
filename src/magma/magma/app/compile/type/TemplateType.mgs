import magma.api.Type;
import magma.api.collect.list.List;
import magma.app.Main;
import jvm.api.text.Strings;
export struct TemplateType implements Type {
	mut base: &[I8];
	mut args: List<&[I8]>;
	constructor (mut base: &[I8], mut args: List<&[I8]>) {
		this.base = base;
		this.args = args;
	}
	static def generateValueStrings(values: List<&[I8]>): &[I8] {
		return Main.generateAll(values, TemplateType.mergeValues);
	}
	static def mergeValues(cache: &[I8], element: &[I8]): &[I8] {
		if (Strings.isEmpty(cache)) {
			return cache + element;
		}
		return cache + ", " + element;
	}
	def generate(): &[I8] {
		return this.base + "<" + TemplateType.generateValueStrings(this.args) + ">";
	}
	def isFunctional(): Bool {
		return false;
	}
	def isVar(): Bool {
		return false;
	}
	def generateBeforeName(): &[I8] {
		return "";
	}
}
