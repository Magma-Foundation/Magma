import magma.api.Type;
import magma.api.collect.list.List;
import magma.app.Main;
import jvm.api.text.Strings;
export struct TemplateType implements Type {
	mut base: &[I8];
	mut args: List<&[I8]>;
	constructor (mut base: &[I8], mut args: List<&[I8]>) {
		this.base = base;
		this.args = args;
	}
	static def generateValueStrings(values: List<&[I8]>): &[I8] {
		return Main/*auto*/.generateAll(values/*auto*/, TemplateType/*auto*/.mergeValues);
	}
	static def mergeValues(cache: &[I8], element: &[I8]): &[I8] {
		if (Strings/*auto*/.isEmpty(cache/*auto*/)) {
			return cache/*auto*/ + element/*auto*/;
		}
		return cache/*auto*/ + ", " + element/*auto*/;
	}
	def generate(): &[I8] {
		return this/*auto*/.base + "<" + TemplateType/*auto*/.generateValueStrings(this/*auto*/.args) + ">";
	}
	def isFunctional(): Bool {
		return false/*auto*/;
	}
	def isVar(): Bool {
		return false/*auto*/;
	}
	def generateBeforeName(): &[I8] {
		return "";
	}
}
