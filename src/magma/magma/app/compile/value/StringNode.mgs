// []
import magma.app.compile.value.{ Value };
import magma.app.io.{ Platform };
import magma.api.option.{ Option, Some, None };
import magma.api.{ Type };
import magma.app.compile.type.{ PrimitiveType };
export struct StringNode implements Value {
	mut value: &[I8];
	constructor (mut value: &[I8]) {
		this.value = value;
	}
	def generate(mut platform: Platform): &[I8] {
		return "\"" + this/*auto*/.value + "\"";
	}
	def toValue(): Option<Value> {
		return Some<Value>(this/*auto*/);
	}
	def findChild(): Option<Value> {
		return None<Value>(/*auto*/);
	}
	def generateAsEnumValue(structureName: &[I8], mut platform: Platform): Option<&[I8]> {
		return None<&[I8]>(/*auto*/);
	}
	def type(): Type {
		return PrimitiveType/*auto*/.Auto;
	}
}
