{
	"children" : [{
		"value" : "package magma;"
	},  {
		"value" : "import java.io.IOException;"
	},  {
		"value" : "import java.nio.file.Files;"
	},  {
		"value" : "import java.nio.file.Path;"
	},  {
		"value" : "import java.nio.file.Paths;"
	},  {
		"value" : "import java.util.ArrayList;"
	},  {
		"value" : "import java.util.stream.Collectors;"
	},  {
		"value" : "public class Main {
    public static void main(String[] args) {
        try {
            Path source = Paths.get(".", "src", "java", "magma", "Main.java");
            String input = Files.readString(source);

            ArrayList<String> segments = new ArrayList<>();
            StringBuilder buffer = new StringBuilder();
            int depth = 0;
            for (int i = 0; i < input.length(); i++) {
                char c = input.charAt(i);
                buffer.append(c);
                if (c == ';' && depth == 0) {
                    segments.add(buffer.toString());
                    buffer = new StringBuilder();
                }
                else {
                    if (c == '{') {
                        depth++;
                    }
                    if (c == '}') {
                        depth--;
                    }
                }
            }
            segments.add(buffer.toString());


            String collect = segments.stream()
                    .map(value -> "{" + createJSONProperty(2, "value", "\"" + value.strip() + "\"") + "\n\t},  ")
                    .collect(Collectors.joining());

            Path target = source.resolveSibling("Main.java.ast.json");
            String children = createJSONProperty(1, "children", "[" + collect + "]");
            Files.writeString(target, "{" + children + "\n}");
        } catch (IOException e) {
            //noinspection CallToPrintStackTrace
            e.printStackTrace();
        }
    }

    private static String createJSONProperty(int depth, String name, String value) {
        String indent = "\t".repeat(depth);
        return "\n" + indent + "\"" + name + "\" : " + value;
    }
}"
	},  ]
}