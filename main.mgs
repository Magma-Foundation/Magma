#include <stdio.h>
#include <stdlib.h>

int main(void) {
    FILE *source = fopen("./main.mgs", "rb");
    if (!source) { perror("fopen source"); return 1; }

    if (fseek(source, 0, SEEK_END) != 0) {
        perror("fseek"); fclose(source); return 1;
    }

    long length = ftell(source);
    if (length < 0) {
        perror("ftell"); fclose(source); return 1;
    }
    rewind(source);

    // allocate length+1, check for integer overflow
    if (length > LONG_MAX - 1) {
        fprintf(stderr, "file too large\n"); fclose(source); return 1;
    }
    char *buffer = malloc((size_t)length + 1);
    if (!buffer) { perror("malloc"); fclose(source); return 1; }

    size_t nread = fread(buffer, 1, (size_t)length, source);
    if (nread != (size_t)length) {
        if (ferror(source)) perror("fread");
        else          fprintf(stderr, "short read\n");
        free(buffer);
        fclose(source);
        return 1;
    }
    buffer[nread] = '\0';

    fclose(source);

    FILE *target = fopen("./main.c", "wb");
    if (!target) { perror("fopen target"); free(buffer); return 1; }

    if (fwrite(buffer, 1, nread, target) != nread) {
        perror("fwrite");
        free(buffer);
        fclose(target);
        return 1;
    }

    fclose(target);
    free(buffer);
    return 0;
}
