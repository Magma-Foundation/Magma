@startuml
class Lists {
}
class Files {
}
interface Actual {
}
interface Namespace {
}
interface Collector<T, C> {
}
class EmptyHead<T> {
}
class FlatMapHead<T, R> {
}
interface Head<T> {
}
class HeadedIter<T> {
}
class MapHead<T, R> {
}
class RangeHead {
}
class SingleHead<T> {
}
interface Iter<T> {
}
class Iters {
}
class Joiner {
}
interface List<T> {
}
class ListCollector<T> {
}
class Console {
}
interface IOError {
}
interface Path {
}
class None<T> {
}
interface Option<T> {
}
class Some<T> {
}
class Err<T, X> {
}
class Ok<T, X> {
}
interface Result<T, X> {
}
class Characters {
}
class Strings {
}
interface Tuple2<A, B> {
}
class Tuple2Impl<A, B> {
}
interface CompileState {
}
class ConstructionCaller {
}
class ConstructorHeader {
}
class Definition {
}
interface MethodHeader {
}
interface Parameter {
}
interface DivideState {
}
class ImmutableCompileState {
}
class ImmutableDivideState {
}
class Import {
}
class Placeholder {
}
class Symbol {
}
class Whitespace {
}
class FunctionType {
}
class PrimitiveType {
}
class TemplateType {
}
interface Type {
}
class VariadicType {
}
class AccessValue {
}
interface Argument {
}
interface Caller {
}
class Invokable {
}
class Lambda {
}
class Not {
}
class Operation {
}
class StringValue {
}
interface Value {
}
Value--|>Argument
Value--|>Caller
class Source {
}
class Main {
}
class Platform {
}
@enduml