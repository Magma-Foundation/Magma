extern import { IOException } from java.io;
extern import { Files } from java.nio.file;
extern import { Path } from java.nio.file;
extern import { Paths } from java.nio.file;

export object Main = {
	def main() : Void => {
        try {
            run(new DirectorySourceSet(Paths.get("./Personal/Magma/magmac/src/java")), Paths.get("./Personal/Magma/magmac/dist/src/java"));
            run(new DirectorySourceSet(Paths.get("./Personal/Magma/magmac/test/java")), Paths.get("./Personal/Magma/magmac/dist/test/java"));
        } catch (IOException e) {
            //noinspection CallToPrintStackTrace
            e.printStackTrace();
        }
    }
	def run() : Void ? IOException => {
        var set = sourceSet.collect();

        for (var source1 : set) {
            var namespace = source1.findNamespace();
            var name = source1.findName();

            var input = source1.read();
            var output = Compiler.compile(input);

            var parent = namespace.stream().reduce(targetDirectory, Path::resolve, (path, path2) -> path2);
            if(!Files.exists(parent)) Files.createDirectories(parent);

            var target = parent.resolve(name + ".mgs");
            Files.writeString(target, output);
        }
    }
}

export class def Main() => {
}