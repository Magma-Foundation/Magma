extern import { Test } from org.junit.jupiter.api;
extern import { ParameterizedTest } from org.junit.jupiter.params;
extern import { ValueSource } from org.junit.jupiter.params.provider;
extern import { assertCompile } from com.meti.CompiledTest;

export object ClassFeatureTest = {
	pub const TEST_BODY : String = "0";
}

export class def ClassFeatureTest() => {
	@ParameterizedTest
	@ValueSource(strings = ["First", "Second"])
	def testSimpleClasses() : Void => {
        assertCompile(JavaLang.renderJavaClass(name, ""), new MagmaClassNodeBuilder().setPrefix("").setName(name).setContent("").createMagmaClassNode().render());
    }
	@Test
	def testPublicKeyword() : Void => {
        assertCompile(new JavaClassNodeBuilder().setPrefix(Compiler.PUBLIC_KEYWORD).setName(FeatureTest.TEST_SYMBOL).setContent("").createJavaClassNode().renderJavaClass(), new MagmaClassNodeBuilder().setPrefix("export ").setName(FeatureTest.TEST_SYMBOL).setContent("").createMagmaClassNode().render());
    }
	@Test
	def testBody() : Void => {
        assertCompile(JavaLang.renderJavaClass(FeatureTest.TEST_SYMBOL, TEST_BODY),
                new MagmaClassNodeBuilder().setPrefix("").setName(FeatureTest.TEST_SYMBOL).setContent(TEST_BODY).createMagmaClassNode().render());
    }
}