extern import { Test } from org.junit.jupiter.api;
extern import { ParameterizedTest } from org.junit.jupiter.params;
extern import { ValueSource } from org.junit.jupiter.params.provider;
extern import com.meti.Compiler;
extern import { TEST_SYMBOL } from com.meti.FeatureTest;
extern import { assertEquals } from org.junit.jupiter.api.Assertions;

export class def InterfaceFeatureTest() => {
	@ParameterizedTest
	@ValueSource(strings = ["First", "Second"])
	def testSimpleInterface() : Void => {
        assertEquals(renderMagmaTrait("", name, "{\n}"), compile(renderJavaInterface(name)));
    }
	@Test
	def testPublic() : Void => {
        assertEquals(renderMagmaTrait(EXPORT_KEYWORD, TEST_SYMBOL, "{\n}"), compile(renderJavaInterface(PUBLIC_KEYWORD, TEST_SYMBOL)));
    }
}