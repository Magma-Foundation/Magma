extern import { JavaClassNodeBuilder } from com.meti.java;
extern import { RenderableBuilder } from com.meti.java;
extern import { MagmaClassNodeBuilder } from com.meti.magma;
extern import { assertCompile } from com.meti.CompiledTest;

export object FeatureTest = {def assertWithinClass(let input : String;) : Void => {
        var render = new JavaClassNodeBuilder().
                withPrefix("")
                .withName(TEST_SYMBOL)
                .withContent(input)
                .build()
                .render();
        var render1 = new MagmaClassNodeBuilder()
                .withName(TEST_SYMBOL)
                .withContent("\n\t" + output)
                .build()
                .render();
        assertCompile(render, render1);
    }def assertWithinClass(let input : RenderableBuilder;) : Void => {
        assertWithinClass(input.build().render(), output.build().render());
    }
}

export class def FeatureTest() => {
	public static final String TEST_SYMBOL = "Test"
}