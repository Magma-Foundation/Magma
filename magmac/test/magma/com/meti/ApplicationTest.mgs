import { AfterEach } from org.junit.jupiter.api;
import { Test } from org.junit.jupiter.api;
import { IOException } from java.io;
import { Files } from java.nio.file;
import { Path } from java.nio.file;
import { Paths } from java.nio.file;
import { assertFalse } from static org.junit.jupiter.api.Assertions;
import { assertTrue } from static org.junit.jupiter.api.Assertions;
export class def ApplicationTest() => {
    public static final Path SOURCE = Paths.get(".", "ApplicationTest.java")
    public static final Path TARGET = Paths.get(".", "ApplicationTest.mgs")
	def generatesSomething() : Void => {
        Files.createFile(SOURCE);
        new Application(new SingleSourceSet(SOURCE), Paths.get("."), ".mgs").run();
        assertTrue(Files.exists(TARGET));
    }
	def tearDown() : Void => {
        Files.deleteIfExists(SOURCE);
        Files.deleteIfExists(TARGET);
    }
	def generatesNothing() : Void => {
        new Application(new SingleSourceSet(SOURCE), Paths.get("."), ".mgs").run();
        assertFalse(Files.exists(TARGET));
    }
}