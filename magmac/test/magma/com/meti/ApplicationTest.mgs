extern import { SingleSourceSet } from com.meti.io;
extern import { AfterEach } from org.junit.jupiter.api;
extern import { Test } from org.junit.jupiter.api;
extern import { IOException } from java.io;
extern import { Files } from java.nio.file;
extern import { Path } from java.nio.file;
extern import { Paths } from java.nio.file;
extern import org.junit.jupiter.api.Assertions;

export object ApplicationTest = {pub const ROOT : Path = Paths.get(".");pub const TARGET : Path = ROOT.resolve("ApplicationTest.mgs");pub const SOURCE : Path = ROOT.resolve("ApplicationTest.java");
}

export class def ApplicationTest() => {
	@AfterEach
	def tearDown() : Void ? IOException => {
        Files.deleteIfExists(TARGET);
        Files.deleteIfExists(SOURCE);
    }
	@Test
	def generateSomething() : Void ? IOException => {
        Files.createFile(SOURCE);
        Main.run(new SingleSourceSet(SOURCE), Paths.get("."));
        assertTrue(Files.exists(TARGET));
    }
	@Test
	def generatesNothing() : Void ? IOException => {
        Main.run(new SingleSourceSet(SOURCE), Paths.get("."));
        assertFalse(Files.exists(TARGET));
    }
}