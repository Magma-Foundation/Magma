extern import { JavaClassNodeBuilder } from com.meti.java;
extern import { MagmaClassNodeBuilder } from com.meti.magma;
extern import { Test } from org.junit.jupiter.api;
extern import { ParameterizedTest } from org.junit.jupiter.params;
extern import { ValueSource } from org.junit.jupiter.params.provider;
extern import { assertCompile } from com.meti.CompiledTest;

export class def ClassFeatureTest() => {
    public static final String TEST_BODY = "0"
	@ParameterizedTest
	@ValueSource(strings = ["First", "Second"])
	def testSimpleClasses() : Void => {
        assertCompile(new JavaClassNodeBuilder().withPrefix("").withName(name).withContent("").build().render(), new MagmaClassNodeBuilder().withPrefix("").withName(name).withContent("").build().render());
    }
	@Test
	def testPublicKeyword() : Void => {
        assertCompile(new JavaClassNodeBuilder().withPrefix(Lang.PUBLIC_KEYWORD).withName(FeatureTest.TEST_SYMBOL).withContent("").build().render(), new MagmaClassNodeBuilder().withPrefix("export ").withName(FeatureTest.TEST_SYMBOL).withContent("").build().render());
    }
	@Test
	def testBody() : Void => {
        assertCompile(new JavaClassNodeBuilder().withPrefix("").withName(FeatureTest.TEST_SYMBOL).withContent(TEST_BODY).build().render(),
                new MagmaClassNodeBuilder().withPrefix("").withName(FeatureTest.TEST_SYMBOL).withContent(TEST_BODY).build().render());
    }
}