extern import { ArrayList } from java.util;
extern import { List } from java.util;

class def SplittingState() => {
    private final List<String> list
    private StringBuilder builder
    private int depth
	let this.list :  = list;
        this.builder = builder;
        this.depth = depth;
    };
	def SplittingState() : public => {
        this(new ArrayList<>(), new StringBuilder(), 0);
    }
	def isLevel() : boolean => {
        return this.depth == 0;
    }
	def isShallow() : boolean => {
        return this.depth == 1;
    }
	def append() : Void => {
        this.builder.append(c);
    }
	def clean() : Void => {
        this.list.removeIf(String::isBlank);
    }
	def descend() : Void => {
        this.depth = this.depth - 1;
    }
	def advance() : Void => {
        this.list.add(this.builder.toString());
        this.builder = new StringBuilder();
    }
	def ascend() : Void => {
        this.depth = this.depth + 1;
    }
	def unwrap() : List<String> => {
        return list;
    }
}