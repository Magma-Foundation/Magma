import { Function } from java.util.function;
export class def Err<T, E extends Throwable>(value : E) => 	def $(): T => {
			throw value;
	}
	def mapValue(mapper : Function<T, R>): Result<R, E> => {
		return Err(value);
	}
	def match(valueMapper : Function<T, R>, errMapper : Function<E, R>): R => {
		return errMapper.apply(value);
	}
	def mapErr(mapper : Function<E, R>): Result<T, R> => {
		return Err(mapper.apply(value));
	}

