export class def MagmaLang() => {
}
export object MagmaLang {
	def renderDefinedFunction(indent : I32, modifierString : String, name : String, renderedParams : String, typeString : String, content : String): String => {
		return renderFunction(indent, Optional[Ok[value=modifierString + "def "]], Optional[Ok[value=name]], Optional[Ok[value=renderedParams]], Optional[Ok[value=typeString]], Optional[Ok[value=" => " + content]]);
	}
	def renderFunction(indent : I32, modifierString : String, name : String, renderedParams : String, typeString : String, contentString : String): String => {
		let indentString = "\t".repeat(indent);
		return indentString + modifierString + name + "(" + renderedParams + ")" +
               typeString +
               contentString + "\n";
	}
	def renderClass(modifierString : String, name : String, members : ClassMemberResult, paramString : String): String => {
		let instanceContent = renderInstanceClassContent(modifierString, Optional[Ok[value=name]], Optional[Ok[value=members]], Optional[Ok[value=paramString]]);
		let staticContent = renderStaticClassContent(modifierString, Optional[Ok[value=name]], Optional[Ok[value=members]]);
		return instanceContent + staticContent;
	}
	private def renderInstanceClassContent(modifierString : String, name : String, members : ClassMemberResult, paramString : String): String => {
		let joinedInstance = String.join("", Optional[Ok[value=members.instanceMembers()]]);
		return renderDefinedFunction(0, Optional[Ok[value=modifierString + "class "]], Optional[Ok[value=name]], Optional[Ok[value=paramString]], Optional[Ok[value=""]], Optional[Ok[value="{\n" + joinedInstance + "}"]]);
	}
	private def renderStaticClassContent(modifierString : String, name : String, members : ClassMemberResult): String => {
		if (members.staticMembers().isEmpty()) 		return "";
		let joinedStatic = String.join("", Optional[Ok[value=members.staticMembers()]]);
		return modifierString + "object " + name + " {\n" + joinedStatic + "}";
	}
}