export class def JavaClassNodeBuilder implements RenderableBuilder() => {
	const prefix : String;
	const name : String;
	const content : String;
	def JavaClassNodeBuilder() : public => {
        this("", "", "");
    }
	def JavaClassNodeBuilder(let prefix : String;, let name : String;) : public => {
        this.prefix = prefix;
        this.name = name;
        this.content = content;
    }
	def withPrefix() : JavaClassNodeBuilder => {
        return new JavaClassNodeBuilder(prefix, name, content);
    }
	def withName() : JavaClassNodeBuilder => {
        return new JavaClassNodeBuilder(prefix, name, content);
    }
	def withContent() : JavaClassNodeBuilder => {
        return new JavaClassNodeBuilder(prefix, name, content);
    }
	def build() : JavaClassNode => {
        return new JavaClassNode(prefix, name, content);
    }
	def withContent() : JavaClassNodeBuilder => {
        return withContent(builder.build().render());
    }
}