extern import { RenderableBuilder } from com.meti.java;
extern import { Optional } from java.util;

export class def MagmaDefinitionBuilder implements RenderableBuilder() => {
	let flagString : String;
	let mutabilityString : String;
	let name : String;
	let type : String;
	let value : Optional<String>;
	def MagmaDefinitionBuilder() : public => {
        this("", "", "", "", Optional.empty());
    }
	def MagmaDefinitionBuilder() : public => {
        this.flagString = flagString;
        this.mutabilityString = mutabilityString;
        this.name = name;
        this.type = type;
        this.value = value;
    }
	def withFlags() : MagmaDefinitionBuilder => {
        return new MagmaDefinitionBuilder(flagString, mutabilityString, name, type, value);
    }
	def withMutability() : MagmaDefinitionBuilder => {
        return new MagmaDefinitionBuilder(flagString, mutabilityString, name, type, value);
    }
	def withName() : MagmaDefinitionBuilder => {
        return new MagmaDefinitionBuilder(flagString, mutabilityString, name, type, value);
    }
	def withType() : MagmaDefinitionBuilder => {
        return new MagmaDefinitionBuilder(flagString, mutabilityString, name, type, value);
    }
	def withValue() : MagmaDefinitionBuilder => {
        return new MagmaDefinitionBuilder(flagString, mutabilityString, name, type, Optional.of(value));
    }
	@Override
	def build() : MagmaDefinition => {
        return new MagmaDefinition(flagString, mutabilityString, name, type, value);
    }
}