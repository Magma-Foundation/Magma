extern import { RenderableBuilder } from com.meti.java;
extern import { Renderable } from com.meti.node;
extern import { Optional } from java.util;

export class def DeclarationNodeBuilder() => {def DeclarationNodeBuilder() : public => {
        this("", "", "", Optional.empty());
    }def withFlagString(flagString : String) : DeclarationNodeBuilder => {
        return new DeclarationNodeBuilder(flagString, name, type, value);
    }def withName(name : String) : DeclarationNodeBuilder => {
        return new DeclarationNodeBuilder(flagString, name, type, value);
    }def withType(type : String) : DeclarationNodeBuilder => {
        return new DeclarationNodeBuilder(flagString, name, type, value);
    }def withValue(value : String) : DeclarationNodeBuilder => {
        return new DeclarationNodeBuilder(flagString, name, type, Optional.of(value));
    }
	@Overridedef build() : Renderable => {
        return new DeclarationNode(flagString, name, type, value);
    }
}