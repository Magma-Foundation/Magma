extern import { Renderable } from com.meti.node;
extern import { Optional } from java.util;

export class def MagmaMethodNode implements Renderable() => {
	const prefix : String;
	const name : String;
	const type : Optional<String>;
	const content : String;
	const exceptionString : String;
	const parametersString : String;
	def MagmaMethodNode(let prefix : String;, let name : String;, let parametersString : String;, let type : Optional<String>;, let content : String;) : public => {
        this.prefix = prefix;
        this.name = name;
        this.type = type;
        this.content = content;
        this.exceptionString = exceptionString;
        this.parametersString = parametersString;
    }
	def render() : String => {
        var typeString = type.map(inner -> " : " + inner).orElse("");
        return prefix + "def " + name + "(" + parametersString + ")" + typeString + exceptionString + " => " + content;
    }
}