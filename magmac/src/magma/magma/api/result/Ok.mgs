import magma.api.option.None;
import magma.api.option.Option;
import magma.api.option.Some;
import java.util.function.Function;
() => {
	public static from<E, R>(value : R) : Result<R, E> => {
		return Ok(value);
	}
	public flatMapValue<R>(mapper : Function<T, Result<R, E>>) : Result<R, E> => {
		return mapper.apply(value);
	}
	public mapValue<R>(mapper : Function<T, R>) : Result<R, E> => {
		return Ok(mapper.apply(value));
	}
	public isOk() : boolean => {
		return true;
	}
	public mapErr<R>(mapper : Function<E, R>) : Result<T, R> => {
		return Ok(value);
	}
	public match<R>(onOk : Function<T, R>, onErr : Function<E, R>) : R => {
		return onOk.apply(value);
	}
	public findValue() : Option<T> => {
		return Some(value);
	}
	public findErr() : Option<E> => {
		return None.None();
	}
}