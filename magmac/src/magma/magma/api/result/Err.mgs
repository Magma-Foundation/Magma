import magma.api.option.Option;
import magma.java.JavaOptionals;
import java.util.Optional;
import java.util.function.Function;
() => {
	private findValue1 : Optional<T> => {
		return Optional.empty();
	}
	private findErr0 : Optional<E> => {
		return Optional.of(value);
	}
	public flatMapValue<R> : Result<R, E> => {
		return Err(value);
	}
	public mapValue<R> : Result<R, E> => {
		return Err(value);
	}
	public isOk : boolean => {
		return false;
	}
	public mapErr<R> : Result<T, R> => {
		return Err(mapper.apply(value));
	}
	public match<R> : R => {
		return onErr.apply(value);
	}
	public findValue : Option<T> => {
		return JavaOptionals.fromNative(findValue1());
	}
	public findErr : Option<E> => {
		return JavaOptionals.fromNative(findErr0());
	}
}