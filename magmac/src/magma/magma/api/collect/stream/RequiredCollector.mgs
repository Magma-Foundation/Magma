import magma.api.option.Option;
import magma.api.option.Some;
export default class def RequiredCollector<C, T>(collector : Collector<T, C>) => {
	public def createInitial(this : Self) => Some(collector.createInitial());
	public def fold(this : Self, current : Option<C>, next : Option<T>) => current.and(next).map(() => collector.fold(inner.left(), inner.right()));
	implements Collector<Option<T>, Option<C>>;
}