import magma.api.option.None;
import magma.api.option.Option;
import magma.api.option.Some;
import magma.java.JavaOptionals;
import magma.java.NativeListHead;
import java.util.List;
import java.util.Optional;
export default class def Streams() => {
	public static fromNativeList<T>(list : List<T>) : Stream<T> => HeadedStream(Head());
	public static fromOption<T>(option : Option<T>) : Stream<T> => HeadedStream(option.map(SingleHead.new).orElseGet(EmptyHead.EmptyHead));
	public static from(extent : int) : Stream<Integer> => HeadedStream(Head());
	public static of<T>(values : T...) : Stream<T> => HeadedStream(NativeListHead(List.of(values)));
	public static rangeTo(extent : int) : Stream<Integer> => HeadedStream(RangeHead(0, extent));
}