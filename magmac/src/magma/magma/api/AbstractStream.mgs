
import java.util.Optional;
import java.util.function.Function;
public abstract class def AbstractStream() => {
	public def map() : Stream<R> => {
		return AbstractStream();
		
		;}
	public def collect() : C => {
		
		current : var=
		collector.createInitial();
		while
		(true)
		{
			
			finalCurrent : C=
			current;
			
			tuple : var=
			Options.toTuple(head().map(() => collector.fold(finalCurrent, head)), current);
			if
			(tuple.left())
			{
				current=tuple.right();}
			else
			{
				return current;}}}}