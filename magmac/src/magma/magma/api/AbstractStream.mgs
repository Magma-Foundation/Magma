import java.util.Optional;
import java.util.function.Function;
export class def AbstractStream() => {
	public def map(mapper : T => R) : Stream<R> => {
		return AbstractStream();
		
		
	;
	}
	public def collect(collector : Collector<T, C>) : C => {
		current : var = collector.createInitial();
		while(true){
			finalCurrent : C = current;
			tuple : var = Options.toTuple(head().map((head) => collector.fold(finalCurrent, head)), current);
			if(tuple.left()){
				current=tuple.right();
			}
			else
			{
				return current;
			}
		
		}
	}
}
