import magma.api.Tuple;
import magma.lang.Instance;
import java.util.function.Function;
import java.util.function.Supplier;
() => {
	public static None<T> : None<T> => {
		return None();
	}
	public map<R> : Option<R> => {
		return None();
	}
	public orElseGet : T => {
		return supplier.get();
	}
	public orElse : T => {
		return other;
	}
	public isPresent : boolean => {
		return false;
	}
	public toTuple : Tuple<Boolean, T> => {
		return Tuple(false, other);
	}
	public isEmpty : boolean => {
		return true;
	}
	public flatMap<R> : Option<R> => {
		return None();
	}
	public orElsePanic : T => {
		throw RuntimeException("Option was empty!");
	}
	public and<R> : Option<Tuple<T, R>> => {
		return None();
	}
}