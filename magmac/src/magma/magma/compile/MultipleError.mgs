import java.util.List;import java.util.Optional;export class def MultipleError() => {private final errors : List<Error_>;def MultipleError(this, errors : List<Error_>) : public => {this=errors;}public def findMessage(this) : Optional<String> => {return Optional.empty();}public def findCauses(this) : Optional<List<Error_>> => {return Optional.of(errors);}public def findContext(this) : Optional<String> => {return Optional.empty();}public def calculateDepth(this) : int => {return 1+errors.stream().mapToInt(Error_.calculateDepth).max().orElse(0);}}