
import magma.compile.Error_;
import magma.compile.attribute.Attributes;
import magma.compile.rule.Node;
import java.util.Optional;
import java.util.function.Function;
() => {
	public def findName() : Optional<String> => {
		return Optional.of(name);}
	public def findAttributes() : Optional<Attributes> => {
		return Optional.of(attributes);}
	public def tryCreate() : Optional<Node> => {
		return Optional.of(Node(name, attributes));}
	public def findError() : Optional<Error_> => {
		return Optional.empty();}
	public def withType() : RuleResult => {
		return this;}
	public def mapErr() : RuleResult => {
		return this;}}