
import magma.compile.Error_;
import magma.compile.attribute.Attributes;
import magma.compile.rule.Node;
import java.util.Optional;
import java.util.function.Function;
export class def ErrorRuleResult(e : Error_) => {
	public def findName(this) : Optional<String> => {
		return Optional.empty();
	}
	public def findError(this) : Optional<Error_> => {
		return Optional.of(e);
	}
	public def mapErr(this, mapper : (Error_) => Error_) : RuleResult => {
		return ErrorRuleResult(mapper.apply(e));
	}
	public def findAttributes(this) : Optional<Attributes> => {
		return Optional.empty();
	}
	public def tryCreate(this) : Optional<Node> => {
		return Optional.empty();
	}
	public def withType(this, type : String) : RuleResult => {
		return this;
	}
}
