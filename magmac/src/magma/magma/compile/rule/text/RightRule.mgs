import magma.api.Result;
import magma.compile.CompileError;
import magma.compile.Error_;
import magma.compile.rule.Node;
import magma.compile.rule.Rule;
import magma.compile.rule.result.ErrorRuleResult;
import magma.compile.rule.result.RuleResult;
export class def RightRule(Rule child, String slice)() => {
	public def toNode(input : String) : RuleResult => {
		if(input.endsWith(slice)){
			let contentEnd = input.length()-slice.length();
			let content = input.substring(0, contentEnd);
			return child.toNode(content);
		}
		else
		{
			return ErrorRuleResult(CompileError("Input does not end with '%s'.".formatted(slice), input));
		}
	
	}
	public def fromNode(node : Node) : Result<String, Error_> => {
		return child.fromNode(node).mapValue((inner) => inner+slice);
	}
}
