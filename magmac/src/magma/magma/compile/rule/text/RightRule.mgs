import magma.api.result.Result;
import magma.compile.CompileError;
import magma.compile.Error_;
import magma.compile.rule.Node;
import magma.compile.rule.Rule;
import magma.compile.rule.result.ErrorRuleResult;
import magma.compile.rule.result.RuleResult;
export class def RightRule(child : Rule, slice : String) => {
	public def toNode(input : String) => {
		if(input.endsWith(slice))
		{
			contentEnd : var=input.length()-slice.length();
			content : var=input.substring(0, contentEnd);
			return child.toNode(content);
		}
		else
		{
			return ErrorRuleResult(CompileError("Input does not end with '%s'.".formatted(slice), input));
		}
	}
	public def fromNode(node : Node) => child.fromNode(node).mapValue(() => inner+slice);
	implements Rule;
}