import magma.api.result.Result;
import magma.compile.CompileError;
import magma.compile.Error_;
import magma.compile.rule.Node;
import magma.compile.rule.Rule;
import magma.compile.rule.result.ErrorRuleResult;
import magma.compile.rule.result.RuleResult;
export class def LeftRule(slice : String, child : Rule) => {
	public def toNode(input : String) => {
		if
		(input.startsWith(slice))
		{
			
			content : var=
			
			input.substring(slice.length());
			return child.toNode(content);
		}
		else
		{
			return ErrorRuleResult(CompileError(String.format("Input does not start with '%s'.", slice), input));
		}
	}
	public def fromNode(node : Node) => child.fromNode(node).mapValue(() => slice+inner);
	implements Rule;
}