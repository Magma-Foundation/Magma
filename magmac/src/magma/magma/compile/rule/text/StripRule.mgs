
import magma.api.Result;
import magma.compile.CompileParentError;
import magma.compile.Error_;
import magma.compile.attribute.Attribute;
import magma.compile.rule.Node;
import magma.compile.rule.Rule;
import magma.compile.rule.result.RuleResult;
() => {
	
	public static final DEFAULT_LEFT : String=
	"left";
	
	public static final DEFAULT_RIGHT : String=
	"right";
	StripRule : public => {
		this(child, DEFAULT_LEFT, DEFAULT_RIGHT);}
	public toNode : RuleResult => {
		return child.toNode(input.strip()).mapErr(() => CompileParentError("Cannot strip input.", input, error));}
	public fromNode : Result<String, Error_> => {
		
		leftIndent : var=
		node.attributes().apply(left).flatMap(Attribute.asString).orElse("");
		
		rightIndent : var=
		node.attributes().apply(right).flatMap(Attribute.asString).orElse("");
		return child.fromNode(node).mapValue(() => leftIndent+inner+rightIndent).mapErr(() => CompileParentError("Cannot apply indentation: ", node.toString(), err));}}