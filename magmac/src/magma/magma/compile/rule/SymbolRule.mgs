export default class def SymbolRule() => {
	SymbolRule(child : Rule) : public => super(child)
	private static isValidDigit(i : int, c : char) : boolean => i!=0&&Character.isDigit(c);
	private static isUnderscore(c : char) : boolean => c=='_';
	protected computeMessage() : String => "Not a symbol.";
	protected filter(input : String) : boolean => {
		if
		(input.isEmpty())
		{
			return false;
		}
		
		i : int=
		
		0;
		while
		(i<input.length())
		{
			
			c : var=
			
			input.charAt(i);
			if
			(Character.isLetter(c)||isUnderscore(c)||isDollar(c)||isValidDigit(i, c))
			{
				i++;
				continue
				;
			}
			return false;
		}
		return true;
	}
	private static isDollar(c : char) : boolean => c=='$';
}