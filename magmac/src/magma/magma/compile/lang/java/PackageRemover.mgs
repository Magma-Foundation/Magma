import magma.api.Tuple;
import magma.api.collect.List;
import magma.api.result.Ok;
import magma.api.result.Result;
import magma.compile.Error_;
import magma.compile.annotate.State;
import magma.compile.lang.Visitor;
import magma.compile.rule.Node;
import magma.java.JavaList;
export default class def PackageRemover() => {
	private static removeFromChildren(children : List<Node>) : List<Node> => return children.stream().filter(() => !child.is("package")).collect(JavaList.collecting());
	public preVisit(node : Node, state : State) : Result<Tuple<Node, State>, Error_> => return Ok(Tuple(node.mapNodes("children", PackageRemover.removeFromChildren), state));
}