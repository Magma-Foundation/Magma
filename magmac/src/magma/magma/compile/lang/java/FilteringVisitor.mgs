import magma.api.Tuple;
import magma.api.result.Ok;
import magma.api.result.Result;
import magma.compile.Error_;
import magma.compile.annotate.State;
import magma.compile.lang.Visitor;
import magma.compile.rule.Node;
import java.util.function.BiFunction;
() => {
	public def preVisit(node : Node, state : State) => applyFilter(node, state, child.preVisit);
	def applyFilter(node : Node, state : State, folder : BiFunction<Node, State, Result<Tuple<Node, State>, Error_>>) => {
		if
		(!node.is(type))
		return Ok(Tuple(node, state));
		return folder.apply(node, state);
	}
	public def postVisit(node : Node, state : State) => applyFilter(node, state, child.postVisit);
}