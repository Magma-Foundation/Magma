import java.util.List;import java.util.Optional;import java.util.stream.Collectors;export class def StringListAttribute(values : List<String>) => {public static final let Factory : Factory<List<String>> = Factory((() => {return {public def fromAttribute(this, attribute : Attribute) : Optional<List<String>> => {return attribute.asStringList();}public def toAttribute(this, value : List<String>) : Attribute => {return StringListAttribute(value);}};})())();;public def asStringList(this) : Optional<List<String>> => {return Optional.of(values);}public def format(this, depth : int) : String => {return values.stream().map(() => "\"" + value + "\"").collect(Collectors.joining(", ", "[", "]"));}}