
import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;
() => {
	let Factory : Factory<List<String>> = Factory((() => {
		return {
			public def fromAttribute(attribute : Attribute) : Optional<List<String>> => {
				return attribute.asStringList();
			}
			public def toAttribute(value : List<String>) : Attribute => {
				return StringListAttribute(value);
			}
		};
	})())();
	public def asStringList() : Optional<List<String>> => {
		return Optional.of(values);
	}
	public def format(depth : int) : String => {
		return values.stream().map(() => "\"" + value + "\"").collect(Collectors.joining(", ", "[", "]"));
	}
}
