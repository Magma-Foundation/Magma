import magma.api.Tuple;
import magma.api.collect.stream.Streams;
import magma.api.result.Result;
import magma.compile.Error_;
import magma.compile.annotate.State;
import magma.compile.lang.Generator;
import magma.compile.rule.Node;
import java.util.List;
export class def CompoundGenerator(children : List<Generator>) => {
	public def generate(this, root : Node, state : State) : Result<Tuple<Node, State>, Error_> => {
		let mut initial : var = Tuple(root, state);
		return Streams.fromNativeList(children()).foldLeftToResult(initial, () => generator.generate(tuple.left(), tuple.right()));
	}
}
